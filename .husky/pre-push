#!/usr/bin/env sh

echo "🚀 FinTrack v5 Pre-push checks starting..."

# CRITICAL: Production build check (moved from pre-commit for faster commits)
echo "🔍 Checking production build..."
npm run build > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "🚫 PUSH REJECTED: Production build failed"
  echo "💡 Run 'npm run build' to see detailed errors"
  echo "💡 Build must pass before pushing to ensure deployable code"
  exit 1
fi
echo "✅ Production build passed"

# TypeScript compilation double-check
echo "🔍 Final TypeScript compilation check..."
npx tsc --noEmit
if [ $? -ne 0 ]; then
  echo "🚫 PUSH REJECTED: TypeScript compilation failed"
  echo "💡 Fix TypeScript errors before pushing"
  exit 1
fi
echo "✅ TypeScript compilation passed"

# Mock data detection check (excluding test files)
echo "🔍 Checking for mock data and TODO comments..."
MOCK_FILES=$(grep -r -l --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" \
  --exclude-dir="__tests__" --exclude="*.test.*" --exclude="*.spec.*" \
  -e "Mock.*data" \
  -e "mock.*=" \
  -e "will be replaced" \
  -e "TODO.*replace" \
  -e "hardcoded.*data" \
  -e "fake.*data" \
  src/ 2>/dev/null || true)

if [ ! -z "$MOCK_FILES" ]; then
  echo "🚫 PUSH REJECTED: Mock data or TODO comments found in:"
  echo "$MOCK_FILES"
  echo ""
  echo "💡 Found suspicious patterns that may indicate mock data:"
  grep -n --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" \
    --exclude-dir="__tests__" --exclude="*.test.*" --exclude="*.spec.*" \
    -e "Mock.*data" \
    -e "mock.*=" \
    -e "will be replaced" \
    -e "TODO.*replace" \
    -e "hardcoded.*data" \
    -e "fake.*data" \
    $MOCK_FILES 2>/dev/null || true
  echo ""
  echo "💡 Please replace mock data with real API calls before pushing"
  exit 1
fi
echo "✅ No mock data patterns detected"

# ESLint check (only block on errors, not warnings)
echo "🔍 Running ESLint checks..."
ESLINT_OUTPUT=$(npm run lint 2>&1)
ESLINT_ERRORS=$(echo "$ESLINT_OUTPUT" | grep -c "Error:" || true)
ESLINT_WARNINGS=$(echo "$ESLINT_OUTPUT" | grep -c "Warning:" || true)

if [ $ESLINT_ERRORS -gt 0 ]; then
  echo "🚫 PUSH REJECTED: $ESLINT_ERRORS ESLint error(s) found"
  echo "$ESLINT_OUTPUT" | grep "Error:"
  echo "💡 Fix ESLint errors before pushing"
  exit 1
fi

if [ $ESLINT_WARNINGS -gt 0 ]; then
  echo "⚠️  ESLint found $ESLINT_WARNINGS warning(s) - not blocking push"
  echo "💡 Consider fixing warnings in a follow-up commit"
fi

echo "✅ ESLint checks passed (no errors)"

# Full test suite
echo "🔍 Running complete test suite..."
npm run test
if [ $? -ne 0 ]; then
  echo "🚫 PUSH REJECTED: Test suite failed"
  echo "💡 Fix failing tests before pushing"
  exit 1
fi
echo "✅ Test suite passed"

# Security audit
echo "🔍 Running security audit..."
npm audit --audit-level=moderate --silent
if [ $? -ne 0 ]; then
  echo "🚫 PUSH REJECTED: Security vulnerabilities found"
  echo "💡 Run 'npm audit fix' to fix security issues"
  exit 1
fi
echo "✅ Security audit passed"

echo "✅ All pre-push checks passed! Safe to deploy 🚀"
